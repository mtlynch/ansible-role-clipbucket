#!/bin/sh

# Exit immediately on error.
set -e

# Echo to console.
set -x

cd tests/

envsubst '${distro}' < Dockerfile.template > Dockerfile

# Customize container.
container_tag="${distro}:ansible"
docker build \
  --rm=true \
  --tag="${container_tag}" .

# Run container in detached state
id_file=$(mktemp)
DISPLAY=":1"
docker run \
  --detach \
  --volume="${PWD}":/etc/ansible/roles/role_under_test:ro \
  -w "/tmp" \
  -e "DISPLAY=${DISPLAY}" \
  ${container_tag} ${init} > "${id_file}"
container_id="$(cat $id_file)"
echo "Container ID:" "${container_id}"

printf "${container_id} ansible_connection=docker\n" > hosts

# Print ansible version.
ansible --version

# Create a symlink to the role under test (removing previous if it existed)
mkdir -p roles
rm roles/role_under_test || true
ln -s ../../ roles/role_under_test

# Install dependencies.
ansible-galaxy install \
  -r roles/role_under_test/tests/requirements.yml

# Ansible syntax check.
ansible-playbook install.yml --syntax-check

# Check that role installs successfully.
export admin_user="testadmin"
export admin_password="testpw123"
ansible-playbook install.yml \
  --extra-vars "clipbucket_admin_user=${admin_user}" \
  --extra-vars "clipbucket_admin_password=${admin_password}"

# Test role idempotence.
idempotence_file=$(mktemp)
ansible-playbook install.yml \
  --extra-vars "clipbucket_admin_user=${admin_user}" \
  --extra-vars "clipbucket_admin_password=${admin_password}" \
  | tee "${idempotence_file}"
grep -q 'changed=0.*failed=0' "${idempotence_file}" && \
  (echo 'Idempotence test: pass' && exit 0) || \
  (echo 'Idempotence test: fail' && exit 1)

# Install Selenium and dependencies.

ansible-playbook install_selenium.yml \
  --extra-vars "virtual_display=${DISPLAY}"

# Test the ClipBucket web UI flow.
docker exec --user selenium -it "${container_id}" \
  python /etc/ansible/roles/role_under_test/clipbucket_driver/main.py \
    --url http://127.0.0.1/ \
    --username "${admin_user}" \
    --password "${admin_password}"

# Clean up
docker stop "${container_id}"
docker rm "${container_id}"
rm Dockerfile

# Check role for linter errors.
ansible-lint install.yml -t role_under_test
